// Copyright by Potato Engine contributors. See accompanying License.txt for copyright details.

#include <nlohmann/json.hpp>
#include <filesystem>
#include <fstream>
#include <iostream>
#include <memory>
#include <string>

namespace fs = std::filesystem;

// NOLINTNEXTLINE(bugprone-exception-escape)
int main(int argc, char const* argv[]) {
    if (argc != 4) {
        std::cerr << "Usage: codegen <input> <output> <name>\n";
        return 1;
    }

    std::string inputPath{argv[1]};
    std::string outputPath{argv[2]};
    std::string name{argv[3]};

    std::ifstream input(inputPath, std::ios::binary);
    if (!input) {
        std::cerr << "Failed to open `" << inputPath << "` for reading\n";
        return 2;
    }

    auto doc = nlohmann::json::parse(input, {}, /*allow_exceptions=*/false, /*allow_comments=*/true);
    if (doc.is_discarded()) {
        std::cerr << "Failed to parse JSON in `" << inputPath << "`\n";
        return 4;
    }
    input.close();

    std::ofstream output(outputPath, std::ios::binary | std::ios::trunc);
    if (!output) {
        std::cerr << "Failed to open `" << outputPath << "` for writing\n";
        return 3;
    }

    output << "// Generated by " << argv[0] << '\n';

    output.close();

    return 0;
}
