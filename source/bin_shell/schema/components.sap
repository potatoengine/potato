module components;

import common;
import ecs;
import tools;
import constraint;

[cxximport("up::Model", "potato/render/model.h")]
struct Model {}

[cxximport("up::SoundResource", "potato/audio/sound_resource.h")]
struct SourceResource {}

[cxximport("up::rc<up::Model>", "potato/render/model.h")]
type ModelHandle;

[cxximport("up::rc<up::SoundResource>", "potato/audio/sound_resource.h")]
type SoundHandle;

[Component]
struct Transform {
    [DisplayName("Pos")]
    vec3 position;

    [DisplayName("Rot")]
    quat rotation;

    [Hidden]
    mat4x4 transform;
}

[Component]
struct Mesh {
    ModelHandle model;
}

[Component]
struct Wave {
    float time;
    float offset;
}

[Component]
struct Spin {
    float radians;
}

[Component]
struct Ding {
    float period = 1;
    [FloatRange(0, 3600)]
    float time = 0;
    SoundHandle sound;
}

struct Data {
    [DisplayName("Value")]
    int x;
    [DisplayName("Description")]
    string s;
}

[Component]
struct Test {
    [DisplayName("Data")]
    Data d1;

    [Flatten]
    Data d2;

    [Tooltip("Test array")]
    [IntRange(-10, 10)]
    int[] numbers;
}
