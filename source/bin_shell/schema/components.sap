module components;

import common;
import ecs;
import tools;
import constraint;

[cxximport("up::Mesh", "potato/render/mesh.h")]
struct MeshAsset {}
[cxximport("up::Material", "potato/render/material.h")]
struct MaterialAsset {}

[cxximport("up::SoundResource", "potato/audio/sound_resource.h")]
struct SourceAsset {}

[cxximport("up::rc<up::Mesh>", "potato/render/mesh.h")]
type MeshHandle;
[cxximport("up::rc<up::Material>", "potato/render/material.h")]
type MaterialHandle;

[cxximport("up::rc<up::SoundResource>", "potato/audio/sound_resource.h")]
type SoundHandle;

[Component]
struct Transform {
    [DisplayName("Pos")]
    vec3 position;

    [DisplayName("Rot")]
    quat rotation;

    [Hidden]
    mat4x4 transform;
}

[Component]
struct Mesh {
    [AssetReference("potato.asset.model")]
    MeshHandle mesh;

    [AssetReference("potato.asset.material")]
    MaterialHandle material;
}

[Component]
struct Wave {
    float time;
    float offset;
}

[Component]
struct Spin {
    float radians;
}

[Component]
struct Ding {
    float period = 1;
    [FloatRange(0, 3600)]
    float time = 0;
    [AssetReference("potato.asset.sound")]
    SoundHandle sound;
}

struct Data {
    [DisplayName("Value")]
    int x;
    [DisplayName("Description")]
    string s;
}

[Component]
struct Test {
    [DisplayName("Data")]
    Data d1;

    [Flatten]
    Data d2;

    [Tooltip("Test array")]
    [IntRange(-10, 10)]
    int[] numbers;
}
