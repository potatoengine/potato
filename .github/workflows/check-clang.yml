name: 'Check'

on:
  push:
    branches:
      - master
  pull_request: {}

jobs:
  check-clang-format:
    name: 'Clang Format'
    runs-on: 'ubuntu-20.04'

    steps:
      - name: Apt update
        run: sudo apt-get -yq update
      - name: Install toolchain
        run: sudo apt-get -yq install clang-format-11 # Match VS2019's version
      - uses: actions/checkout@master
      - name: Check Format
        run: python3 ./scripts/tools/run-clang-format.py -r --clang-format-executable clang-format-11 --exclude ./external --extensions h,cpp,cc ./source

  check-clang-tidy:
    name: 'Clang Tidy'
    runs-on: 'ubuntu-20.04'

    env:
      CXX: clang++-12
      CC: clang-12
      CXXFLAGS: -stdlib=libc++ -fdiagnostics-absolute-paths -mssse3
      UP_CXXFLAGS: -Wno-deprecated-volatile -Wno-deprecated-enum-enum-conversion -Wno-unknown-attributes
      CONFIG: Debug
      SHARED: OFF
      TIDY: clang-tidy-12

    steps:
      - uses: actions/checkout@master
        with:
          lfs: true
      - name: Install Clang
        uses: ./.github/actions/setup-llvm
        with:
          version: 12
          components: clang clang-tidy libc++
      - name: Install libraries
        run: sudo apt-get -yq install uuid-dev libsdl2-dev libassimp-dev libuv1-dev
      - name: Install Problem Matchers
        uses: Trass3r/setup-cpp@v1
      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@v3
      - name: Configure
        run: |
          mkdir -p build
          cmake -S . -B build -G Ninja "-DUP_CXXFLAGS:STRING=${{ env.UP_CXXFLAGS }}" "-DBUILD_SHARED_LIBS=${{ env.SHARED }}" "-DUP_CLANG_TIDY:PATH=${{ env.TIDY }}" "-DCMAKE_BUILD_TYPE:STRING=${{ env.CONFIG }}"
      - name: Build
        run: cmake --build build --parallel -- -k 0 -v
