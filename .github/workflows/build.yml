name: Build

on:
  push:
    branches:
      - master
  pull_request: []

jobs:
  build-windows:
    strategy:
      matrix:
        config: [ Debug, Release ]

    name: 'Build Windows (${{ matrix.config }})'
    runs-on: 'windows-latest'

    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Install Dependencies
        run: |
          set DEPS=%HOME%\deps
          curl -o SDL2-devel-2.0.9-VC.zip -L https://www.libsdl.org/release/SDL2-devel-2.0.9-VC.zip
          unzip SDL2-devel-2.0.9-VC.zip -d %DEPS%
          curl -o assimp-4.1.0.zip -L https://grimmdeps.blob.core.windows.net/deps/assimp-4.1.0.zip
          unzip assimp-4.1.0.zip -d %DEPS%
          echo ::set-env name=DEPS::%DEPS%
      - name: Install Ninja
        uses: potatoengine/ghactions/setup-ninja@setup-ninja
      - name: Setup VS Environment
        uses: potatoengine/ghactions/setup-vsdevenv@v2
      - name: Configure
        env:
          CXXFLAGS: /W3 /WX
          CXX: cl.exe
          CC: cl.exe
        run: |
          mkdir build
          cd build
          cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING=${{ matrix.config }} -DSDL2_PATH:PATH="%DEPS%/SDL2-2.0.9" -DBUILD_SHARED_LIBS=YES -DASSIMP_ROOT_DIR:PATH="%DEPS%/assimp-4.1.0" .. || exit /b 1
      - name: Build
        run: cmake --build build --parallel
      - name: Test
        run: |
          cd build
          ctest -T test -R potato --verbose

  build-posix:
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'macos-latest' ]
        config: [ 'Debug', 'Release' ]
        include:
          - name: Ubuntu
            os: ubuntu-latest
            cxxflags: -Wall -Werror -Wno-error=maybe-uninitialized
            cxx: g++-7
            cc: gcc-7
          - name: macOS
            os: macos-latest
            xcode: 10.3
            cxxflags: -Wall -Werror
            cxx: clang++
            cc: clang
    
    name: 'Build ${{ matrix.name }} (${{ matrix.config }} ${{ matrix.cxx }})'
    runs-on: '${{ matrix.os }}'

    steps:
      - uses: actions/checkout@master
      - name: Install Ninja
        uses: potatoengine/ghactions/setup-ninja@setup-ninja
      - name: Select XCode
        run: sudo /usr/bin/xcode-select -switch /Applications/Xcode_${{ matrix.xcode }}.app
        if: runner.os == 'macOS'
      - name: Configure
        env:
          CXXFLAGS: '${{ matrix.cxxflags }}'
          CXX: '${{ matrix.cxx }}'
          CC: '${{ matrix.cc }}'
        run: |
          mkdir -p build
          cd build
          cmake -G Ninja -DBUILD_SHARED_LIBS=OFF "-DCMAKE_BUILD_TYPE:STRING=${{ matrix.config }}" ..
      - name: Build
        run: cmake --build build --parallel
      - name: Test
        run: |
          cd build
          ctest -T test -R potato --verbose
