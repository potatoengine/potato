name: CI

on:
  push:
    branches:
      - master
  pull_request: []

jobs:
  Windows:
    strategy:
      matrix:
        config: [ Debug, Release ]

    name: 'Build Windows (${{ matrix.config }})'
    runs-on: 'windows-latest'

    steps:
      - uses: actions/checkout@master
      - name: Install Dependencies
        run: |
          curl -o SDL2-devel-2.0.9-VC.zip -L https://www.libsdl.org/release/SDL2-devel-2.0.9-VC.zip
          unzip SDL2-devel-2.0.9-VC.zip -d ${HOME}/deps
          curl -o assimp-4.1.0.zip -L https://grimmdeps.blob.core.windows.net/deps/assimp-4.1.0.zip
          unzip assimp-4.1.0.zip -d ${HOME}/deps
          curl -o ninja-win.zip -L https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-win.zip
          unzip ninja-win.zip -d ${HOME}/bin
        shell: bash
      - name: Configure and Build
        run: |
          echo on
          setlocal enableextensions enabledelayedexpansion
          set VCDIR=C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise
          set HOME=%HOMEDRIVE%%HOMEPATH%
          set PATH=%PATH%;%HOME%\bin
          set DEPS=%HOME%\deps
          call "%VCDIR%\VC\Auxiliary\Build\vcvarsall.bat" x64
          echo on
          set CC=cl.exe
          set CXX=cl.exe
          set CXXFLAGS=/W3 /WX
          mkdir build
          cd build
          cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING=${{ matrix.config }} -DSDL2_PATH:PATH="%DEPS%/SDL2-2.0.9" -DBUILD_SHARED_LIBS=YES -DASSIMP_ROOT_DIR:PATH="%DEPS%/assimp-4.1.0" .. || exit /b 1
          cmake --build . --parallel
      - name: Test
        run: |
          cd build
          ctest -T test -R potato --verbose

  Ubuntu:
    strategy:
      matrix:
        config: [ Debug, Release ]
        cxx: [ 'g++-7' ]
    
    name: 'Build Ubuntu (${{ matrix.config }} ${{ matrix.cxx }})'
    runs-on: 'ubuntu-latest'

    steps:
      - uses: actions/checkout@master
      - name: Configure
        run: |
          mkdir -p build
          cd build
          CXXFLAGS="-Wall -Werror"
          cmake "-DCMAKE_CXX_COMPILER=${{ matrix.cxx }}" -DBUILD_SHARED_LIBS=OFF "-DCMAKE_BUILD_TYPE:STRING=${{ matrix.config }}" ..
      - name: Build
        run: |
          cd build
          cmake --build . --parallel
      - name: Test
        run: |
          cd build
          ctest -T test -R potato --verbose

  Doxygen:
    runs-on: 'ubuntu-latest'

    steps:
      - uses: actions/checkout@master
      - name: Install Doxygen
        run: sudo apt-get install -y doxygen
      - name: Configure
        run: |
          mkdir build
          cd build
          cmake -DUP_BUILD_DOCS=ON ..
      - name: Build Docs
        run: |
          cd build
          cmake --build . --target doxygen
      - name: Package
        uses: actions/upload-artifact@master
        with:
          name: html-docs
          path: build/documentation/doxygen/html
#      - name: Publish
#        uses: actions/aws/cli@master
#          with:
#            args: 's3 sync build/documentation/doxygen/html s3://${{ secrets.doxygen_s3_region }}-${{ secrets.doxygen_s3_bucket }}/ --acl public-read'
#        if: false && github.refs.endsWith('/master')
